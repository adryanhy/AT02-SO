#include <stdio.h>
#include <stdlib.h>

void lfu(int *referencias, int num_referencias, int num_paginas, int *paginas, int *faltas_pagina) {
    int i, j, k;
    int *frequencias = (int *)malloc(num_paginas * sizeof(int));
    int *presente = (int *)malloc(num_paginas * sizeof(int));

    for (i = 0; i < num_paginas; i++) {
        paginas[i] = -1;
        frequencias[i] = 0;
        presente[i] = 0;
    }

    for (i = 0; i < num_referencias; i++) {
        int pagina_referenciada = referencias[i];
        int pagina_presente = 0;

        // Verificar se a página já está na memória
        for (j = 0; j < num_paginas; j++) {
            if (paginas[j] == pagina_referenciada) {
                frequencias[j]++;
                pagina_presente = 1;
                break;
            }
        }

        // Se a página não estiver na memória, substituir a página menos frequentemente usada
        if (!pagina_presente) {
            (*faltas_pagina)++;

            // Encontrar a página menos frequentemente usada
            int pagina_substituir = 0;
            for (j = 1; j < num_paginas; j++) {
                if (frequencias[j] < frequencias[pagina_substituir]) {
                    pagina_substituir = j;
                }
            }

            // Substituir a página
            paginas[pagina_substituir] = pagina_referenciada;
            frequencias[pagina_substituir] = 1;
        }
    }

    free(frequencias);
    free(presente);
}

int main() {
    int num_paginas, num_referencias;

    printf("Digite a quantidade de páginas para simular o algoritmo: ");
    scanf("%d", &num_paginas);

    printf("Digite o número de referências: ");
    scanf("%d", &num_referencias);

    int *referencias = (int *)malloc(num_referencias * sizeof(int));
    printf("Digite os valores das referências: ");
    for (int i = 0; i < num_referencias; i++) {
        scanf("%d", &referencias[i]);
    }

    int *paginas = (int *)malloc(num_paginas * sizeof(int));
    int faltas_pagina = 0;

    lfu(referencias, num_referencias, num_paginas, paginas, &faltas_pagina);

    printf("\nConteúdo final das páginas de memória:\n");
    for (int i = 0; i < num_paginas; i++) {
        if (paginas[i] == -1)
            printf("Vazia\n");
        else
            printf("%d\n", paginas[i]);
    }

    printf("Quantidade de faltas de página: %d\n", faltas_pagina);

    free(referencias);
    free(paginas);

    return 0;
}

